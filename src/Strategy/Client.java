package Strategy;

public class Client {
    /**
     * Strategy - поведенческий паттерн, который определяет семейство схожих алгоритмов и
     помещает каждый из них в собственный класс. После чего, алгоритмы можно
     взаимозаменять прямо во время исполнения программы.
     *
     * Мотивы::
      1 Программа должна обеспечивать различные варианты алгоритма или
     поведения
      2 Нужно изменять поведение каждого экземпляра класса
      3 Необходимо изменять поведение объектов на стадии выполнения
      4 Введение интерфейса позволяет классам-клиентам ничего не знать о классах,
     реализующих этот интерфейс и инкапсулирующих в себе конкретные алгоритмы
     * */

    public static void main(String[] args) {
        Human human = new Human();

        human.setActivity(new Asian());
        human.informMethod();

        human.setActivity(new American());
        human.informMethod();

        human.setActivity(new Europhean());
        human.informMethod();

    }


}
